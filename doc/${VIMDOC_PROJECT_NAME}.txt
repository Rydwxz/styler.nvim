*${VIMDOC_PROJECT_NAME}.txt*   For NVIM v0.5.0   Last change: 2022 November 15

==============================================================================
Table of Contents                   *${VIMDOC_PROJECT_NAME}-table-of-contents*

1. 🎨 Styler                            |${VIMDOC_PROJECT_NAME}-🎨-styler|
  - ⚡️ Requirements           |${VIMDOC_PROJECT_NAME}-⚡️-requirements|
  - 📦 Installation               |${VIMDOC_PROJECT_NAME}-📦-installation|
  - 🚀 Usage                             |${VIMDOC_PROJECT_NAME}-🚀-usage|

==============================================================================
1. 🎨 Styler                            *${VIMDOC_PROJECT_NAME}-🎨-styler*

Simple Neovim plugin to set a different `colorscheme` per filetype.

<div class="figure">
<img src="https://user-images.githubusercontent.com/292349/201787416-204ab55f-0fe9-4336-8f00-a47ad0ca7e4f.png" title="fig:"/>
<p class="caption">image</p>
</div>

⚡️ REQUIREMENTS               *${VIMDOC_PROJECT_NAME}-⚡️-requirements*


- Neovim >= 0.8.0
- **Styler** only work with `colorschemes` that set highlights using `vim.api.nvim_set_hl`


📦 INSTALLATION                   *${VIMDOC_PROJECT_NAME}-📦-installation*

Install the plugin with your preferred package manager:

>
    -- Packer
    use({
      "folke/styler.nvim",
      config = function()
        require("styler").setup({
          themes = {
            markdown = { colorscheme = "gruvbox" },
            help = { colorscheme = "catppuccin-mocha", background = "dark" },
          },
        })
      end,
    })
<


🚀 USAGE                                 *${VIMDOC_PROJECT_NAME}-🚀-usage*

After setup, colorschemes will be automatically applied. To manually set a
colorscheme for the current buffer, you can for example do:

>
    :Styler tokyonight-storm
<


To programmatically set the colorscheme for a certain window, you can use:

>
    require("styler").set_theme(0, {
      colorscheme = "elflord",
      background = "dark"
    })
<



  if you see flickering when a theme is loaded, that’s because the colorscheme
  does `:hi clear` without checking if `vim.g.colors_name` is set. You should
  open an issue or a PR for the colorscheme to fix it.


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
